<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.epss.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.hotel.domain.Orders">
    <id column="orderNumber" jdbcType="CHAR" property="ordernumber" />
    <result column="orderStatus" jdbcType="CHAR" property="orderstatus" />
    <result column="customerIDCard" jdbcType="CHAR" property="customeridcard" />
    <result column="roomNumber" jdbcType="CHAR" property="roomnumber" />
    <result column="checkInTime" jdbcType="DATE" property="checkintime" />
    <result column="checkOutTime" jdbcType="DATE" property="checkouttime" />
    <result column="totalMoney" jdbcType="INTEGER" property="totalmoney" />
    <result column="waiterID" jdbcType="VARCHAR" property="waiterid" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="orderTime" jdbcType="DATE" property="ordertime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderNumber, orderStatus, customerIDCard, roomNumber, checkInTime, checkOutTime, 
    totalMoney, waiterID, remarks, orderTime
  </sql>
  <select id="selectByExample" parameterType="com.hotel.domain.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orderNumber = #{ordernumber,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where orderNumber = #{ordernumber,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hotel.domain.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hotel.domain.Orders">
    insert into orders (orderNumber, orderStatus, customerIDCard, 
      roomNumber, checkInTime, checkOutTime, 
      totalMoney, waiterID, remarks, 
      orderTime)
    values (#{ordernumber,jdbcType=CHAR}, #{orderstatus,jdbcType=CHAR}, #{customeridcard,jdbcType=CHAR}, 
      #{roomnumber,jdbcType=CHAR}, #{checkintime,jdbcType=DATE}, #{checkouttime,jdbcType=DATE}, 
      #{totalmoney,jdbcType=INTEGER}, #{waiterid,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{ordertime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.domain.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="orderstatus != null">
        orderStatus,
      </if>
      <if test="customeridcard != null">
        customerIDCard,
      </if>
      <if test="roomnumber != null">
        roomNumber,
      </if>
      <if test="checkintime != null">
        checkInTime,
      </if>
      <if test="checkouttime != null">
        checkOutTime,
      </if>
      <if test="totalmoney != null">
        totalMoney,
      </if>
      <if test="waiterid != null">
        waiterID,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="ordertime != null">
        orderTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=CHAR},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=CHAR},
      </if>
      <if test="customeridcard != null">
        #{customeridcard,jdbcType=CHAR},
      </if>
      <if test="roomnumber != null">
        #{roomnumber,jdbcType=CHAR},
      </if>
      <if test="checkintime != null">
        #{checkintime,jdbcType=DATE},
      </if>
      <if test="checkouttime != null">
        #{checkouttime,jdbcType=DATE},
      </if>
      <if test="totalmoney != null">
        #{totalmoney,jdbcType=INTEGER},
      </if>
      <if test="waiterid != null">
        #{waiterid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hotel.domain.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.ordernumber != null">
        orderNumber = #{record.ordernumber,jdbcType=CHAR},
      </if>
      <if test="record.orderstatus != null">
        orderStatus = #{record.orderstatus,jdbcType=CHAR},
      </if>
      <if test="record.customeridcard != null">
        customerIDCard = #{record.customeridcard,jdbcType=CHAR},
      </if>
      <if test="record.roomnumber != null">
        roomNumber = #{record.roomnumber,jdbcType=CHAR},
      </if>
      <if test="record.checkintime != null">
        checkInTime = #{record.checkintime,jdbcType=DATE},
      </if>
      <if test="record.checkouttime != null">
        checkOutTime = #{record.checkouttime,jdbcType=DATE},
      </if>
      <if test="record.totalmoney != null">
        totalMoney = #{record.totalmoney,jdbcType=INTEGER},
      </if>
      <if test="record.waiterid != null">
        waiterID = #{record.waiterid,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.ordertime != null">
        orderTime = #{record.ordertime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orderNumber = #{record.ordernumber,jdbcType=CHAR},
      orderStatus = #{record.orderstatus,jdbcType=CHAR},
      customerIDCard = #{record.customeridcard,jdbcType=CHAR},
      roomNumber = #{record.roomnumber,jdbcType=CHAR},
      checkInTime = #{record.checkintime,jdbcType=DATE},
      checkOutTime = #{record.checkouttime,jdbcType=DATE},
      totalMoney = #{record.totalmoney,jdbcType=INTEGER},
      waiterID = #{record.waiterid,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      orderTime = #{record.ordertime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.domain.Orders">
    update orders
    <set>
      <if test="orderstatus != null">
        orderStatus = #{orderstatus,jdbcType=CHAR},
      </if>
      <if test="customeridcard != null">
        customerIDCard = #{customeridcard,jdbcType=CHAR},
      </if>
      <if test="roomnumber != null">
        roomNumber = #{roomnumber,jdbcType=CHAR},
      </if>
      <if test="checkintime != null">
        checkInTime = #{checkintime,jdbcType=DATE},
      </if>
      <if test="checkouttime != null">
        checkOutTime = #{checkouttime,jdbcType=DATE},
      </if>
      <if test="totalmoney != null">
        totalMoney = #{totalmoney,jdbcType=INTEGER},
      </if>
      <if test="waiterid != null">
        waiterID = #{waiterid,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        orderTime = #{ordertime,jdbcType=DATE},
      </if>
    </set>
    where orderNumber = #{ordernumber,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.domain.Orders">
    update orders
    set orderStatus = #{orderstatus,jdbcType=CHAR},
      customerIDCard = #{customeridcard,jdbcType=CHAR},
      roomNumber = #{roomnumber,jdbcType=CHAR},
      checkInTime = #{checkintime,jdbcType=DATE},
      checkOutTime = #{checkouttime,jdbcType=DATE},
      totalMoney = #{totalmoney,jdbcType=INTEGER},
      waiterID = #{waiterid,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      orderTime = #{ordertime,jdbcType=DATE}
    where orderNumber = #{ordernumber,jdbcType=CHAR}
  </update>
</mapper>