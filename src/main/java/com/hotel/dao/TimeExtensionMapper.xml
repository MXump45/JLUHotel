<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.TimeExtensionMapper">
  <resultMap id="BaseResultMap" type="com.hotel.domain.TimeExtension">
    <id column="operatingID" jdbcType="INTEGER" property="operatingid" />
    <result column="orderNumber" jdbcType="CHAR" property="ordernumber" />
    <result column="oldExpiryDate" jdbcType="DATE" property="oldexpirydate" />
    <result column="newExpiryDate" jdbcType="DATE" property="newexpirydate" />
    <result column="addedMoney" jdbcType="INTEGER" property="addedmoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    operatingID, orderNumber, oldExpiryDate, newExpiryDate, addedMoney
  </sql>
  <select id="selectByExample" parameterType="com.hotel.domain.TimeExtensionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from timeextension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from timeextension
    where operatingID = #{operatingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from timeextension
    where operatingID = #{operatingid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hotel.domain.TimeExtensionExample">
    delete from timeextension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hotel.domain.TimeExtension">
    insert into timeextension (operatingID, orderNumber, oldExpiryDate, 
      newExpiryDate, addedMoney)
    values (#{operatingid,jdbcType=INTEGER}, #{ordernumber,jdbcType=CHAR}, #{oldexpirydate,jdbcType=DATE}, 
      #{newexpirydate,jdbcType=DATE}, #{addedmoney,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.domain.TimeExtension">
    insert into timeextension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operatingid != null">
        operatingID,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="oldexpirydate != null">
        oldExpiryDate,
      </if>
      <if test="newexpirydate != null">
        newExpiryDate,
      </if>
      <if test="addedmoney != null">
        addedMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operatingid != null">
        #{operatingid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=CHAR},
      </if>
      <if test="oldexpirydate != null">
        #{oldexpirydate,jdbcType=DATE},
      </if>
      <if test="newexpirydate != null">
        #{newexpirydate,jdbcType=DATE},
      </if>
      <if test="addedmoney != null">
        #{addedmoney,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hotel.domain.TimeExtensionExample" resultType="java.lang.Long">
    select count(*) from timeextension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update timeextension
    <set>
      <if test="record.operatingid != null">
        operatingID = #{record.operatingid,jdbcType=INTEGER},
      </if>
      <if test="record.ordernumber != null">
        orderNumber = #{record.ordernumber,jdbcType=CHAR},
      </if>
      <if test="record.oldexpirydate != null">
        oldExpiryDate = #{record.oldexpirydate,jdbcType=DATE},
      </if>
      <if test="record.newexpirydate != null">
        newExpiryDate = #{record.newexpirydate,jdbcType=DATE},
      </if>
      <if test="record.addedmoney != null">
        addedMoney = #{record.addedmoney,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update timeextension
    set operatingID = #{record.operatingid,jdbcType=INTEGER},
      orderNumber = #{record.ordernumber,jdbcType=CHAR},
      oldExpiryDate = #{record.oldexpirydate,jdbcType=DATE},
      newExpiryDate = #{record.newexpirydate,jdbcType=DATE},
      addedMoney = #{record.addedmoney,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.domain.TimeExtension">
    update timeextension
    <set>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=CHAR},
      </if>
      <if test="oldexpirydate != null">
        oldExpiryDate = #{oldexpirydate,jdbcType=DATE},
      </if>
      <if test="newexpirydate != null">
        newExpiryDate = #{newexpirydate,jdbcType=DATE},
      </if>
      <if test="addedmoney != null">
        addedMoney = #{addedmoney,jdbcType=INTEGER},
      </if>
    </set>
    where operatingID = #{operatingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.domain.TimeExtension">
    update timeextension
    set orderNumber = #{ordernumber,jdbcType=CHAR},
      oldExpiryDate = #{oldexpirydate,jdbcType=DATE},
      newExpiryDate = #{newexpirydate,jdbcType=DATE},
      addedMoney = #{addedmoney,jdbcType=INTEGER}
    where operatingID = #{operatingid,jdbcType=INTEGER}
  </update>
</mapper>