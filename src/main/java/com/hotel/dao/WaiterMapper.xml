<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.WaiterMapper">
  <resultMap id="BaseResultMap" type="com.hotel.domain.Waiter">
    <id column="waiterID" jdbcType="VARCHAR" property="waiterid" />
    <result column="waiterName" jdbcType="VARCHAR" property="waitername" />
    <result column="waiterBirthday" jdbcType="DATE" property="waiterbirthday" />
    <result column="waiterIDCard" jdbcType="CHAR" property="waiteridcard" />
    <result column="waiterPassword" jdbcType="VARCHAR" property="waiterpassword" />
    <result column="waiterJoinDate" jdbcType="DATE" property="waiterjoindate" />
    <result column="waiterPhoneNumber" jdbcType="CHAR" property="waiterphonenumber" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    waiterID, waiterName, waiterBirthday, waiterIDCard, waiterPassword, waiterJoinDate, 
    waiterPhoneNumber, remarks
  </sql>
  <select id="selectByExample" parameterType="com.hotel.domain.WaiterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from waiter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from waiter
    where waiterID = #{waiterid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from waiter
    where waiterID = #{waiterid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hotel.domain.WaiterExample">
    delete from waiter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hotel.domain.Waiter">
    insert into waiter (waiterID, waiterName, waiterBirthday, 
      waiterIDCard, waiterPassword, waiterJoinDate, 
      waiterPhoneNumber, remarks)
    values (#{waiterid,jdbcType=VARCHAR}, #{waitername,jdbcType=VARCHAR}, #{waiterbirthday,jdbcType=DATE}, 
      #{waiteridcard,jdbcType=CHAR}, #{waiterpassword,jdbcType=VARCHAR}, #{waiterjoindate,jdbcType=DATE}, 
      #{waiterphonenumber,jdbcType=CHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.domain.Waiter">
    insert into waiter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="waiterid != null">
        waiterID,
      </if>
      <if test="waitername != null">
        waiterName,
      </if>
      <if test="waiterbirthday != null">
        waiterBirthday,
      </if>
      <if test="waiteridcard != null">
        waiterIDCard,
      </if>
      <if test="waiterpassword != null">
        waiterPassword,
      </if>
      <if test="waiterjoindate != null">
        waiterJoinDate,
      </if>
      <if test="waiterphonenumber != null">
        waiterPhoneNumber,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="waiterid != null">
        #{waiterid,jdbcType=VARCHAR},
      </if>
      <if test="waitername != null">
        #{waitername,jdbcType=VARCHAR},
      </if>
      <if test="waiterbirthday != null">
        #{waiterbirthday,jdbcType=DATE},
      </if>
      <if test="waiteridcard != null">
        #{waiteridcard,jdbcType=CHAR},
      </if>
      <if test="waiterpassword != null">
        #{waiterpassword,jdbcType=VARCHAR},
      </if>
      <if test="waiterjoindate != null">
        #{waiterjoindate,jdbcType=DATE},
      </if>
      <if test="waiterphonenumber != null">
        #{waiterphonenumber,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hotel.domain.WaiterExample" resultType="java.lang.Long">
    select count(*) from waiter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update waiter
    <set>
      <if test="record.waiterid != null">
        waiterID = #{record.waiterid,jdbcType=VARCHAR},
      </if>
      <if test="record.waitername != null">
        waiterName = #{record.waitername,jdbcType=VARCHAR},
      </if>
      <if test="record.waiterbirthday != null">
        waiterBirthday = #{record.waiterbirthday,jdbcType=DATE},
      </if>
      <if test="record.waiteridcard != null">
        waiterIDCard = #{record.waiteridcard,jdbcType=CHAR},
      </if>
      <if test="record.waiterpassword != null">
        waiterPassword = #{record.waiterpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.waiterjoindate != null">
        waiterJoinDate = #{record.waiterjoindate,jdbcType=DATE},
      </if>
      <if test="record.waiterphonenumber != null">
        waiterPhoneNumber = #{record.waiterphonenumber,jdbcType=CHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update waiter
    set waiterID = #{record.waiterid,jdbcType=VARCHAR},
      waiterName = #{record.waitername,jdbcType=VARCHAR},
      waiterBirthday = #{record.waiterbirthday,jdbcType=DATE},
      waiterIDCard = #{record.waiteridcard,jdbcType=CHAR},
      waiterPassword = #{record.waiterpassword,jdbcType=VARCHAR},
      waiterJoinDate = #{record.waiterjoindate,jdbcType=DATE},
      waiterPhoneNumber = #{record.waiterphonenumber,jdbcType=CHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.domain.Waiter">
    update waiter
    <set>
      <if test="waitername != null">
        waiterName = #{waitername,jdbcType=VARCHAR},
      </if>
      <if test="waiterbirthday != null">
        waiterBirthday = #{waiterbirthday,jdbcType=DATE},
      </if>
      <if test="waiteridcard != null">
        waiterIDCard = #{waiteridcard,jdbcType=CHAR},
      </if>
      <if test="waiterpassword != null">
        waiterPassword = #{waiterpassword,jdbcType=VARCHAR},
      </if>
      <if test="waiterjoindate != null">
        waiterJoinDate = #{waiterjoindate,jdbcType=DATE},
      </if>
      <if test="waiterphonenumber != null">
        waiterPhoneNumber = #{waiterphonenumber,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where waiterID = #{waiterid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.domain.Waiter">
    update waiter
    set waiterName = #{waitername,jdbcType=VARCHAR},
      waiterBirthday = #{waiterbirthday,jdbcType=DATE},
      waiterIDCard = #{waiteridcard,jdbcType=CHAR},
      waiterPassword = #{waiterpassword,jdbcType=VARCHAR},
      waiterJoinDate = #{waiterjoindate,jdbcType=DATE},
      waiterPhoneNumber = #{waiterphonenumber,jdbcType=CHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where waiterID = #{waiterid,jdbcType=VARCHAR}
  </update>
</mapper>